{"ast":null,"code":"var _jsxFileName = \"/home/dh/projetos/sd-015-b-project-trivia-react-redux/src/pages/login.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchAPI } from '../redux/actions';\nimport store from '../redux/store';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      email: '',\n      isDisable: true\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange() {\n    const idName = document.getElementById('input-player-name').value;\n    const idEmail = document.getElementById('input-gravatar-email').value;\n    this.setState({\n      [idName]: idEmail\n    });\n\n    if (idName.length > 0 && idEmail.length > 0) {\n      this.setState({\n        isDisable: false\n      });\n    } else {\n      this.setState({\n        isDisable: true\n      });\n    }\n  }\n\n  async handleClick() {\n    const {\n      getToken\n    } = this.props;\n    await getToken();\n    store.getState().login.token;\n  }\n\n  render() {\n    const {\n      isDisable\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"input-player-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, \"Nome\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      id: \"input-player-name\",\n      \"data-testid\": \"input-player-name\",\n      onKeyUp: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"input-gravatar-email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, \"Email\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"email\",\n      id: \"input-gravatar-email\",\n      \"data-testid\": \"input-gravatar-email\",\n      onKeyUp: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      \"data-testid\": \"btn-play\",\n      disabled: isDisable,\n      type: \"button\",\n      onClick: () => this.handleClick(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, \"Jogar\"));\n  }\n\n}\n\nLogin.propTypes = {\n  getToken: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n  getToken: () => dispatch(fetchAPI())\n});\n\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/dh/projetos/sd-015-b-project-trivia-react-redux/src/pages/login.js"],"names":["React","PropTypes","connect","fetchAPI","store","Login","Component","constructor","state","name","email","isDisable","handleClick","bind","handleChange","idName","document","getElementById","value","idEmail","setState","length","getToken","props","getState","login","token","render","propTypes","func","isRequired","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchAPI } from '../redux/actions';\nimport store from '../redux/store';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      name: '',\n      email: '',\n      isDisable: true,\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange() {\n    const idName = document.getElementById('input-player-name').value;\n    const idEmail = document.getElementById('input-gravatar-email').value;\n    this.setState({\n      [idName]: idEmail,\n    });\n    if (idName.length > 0 && idEmail.length > 0) {\n      this.setState({ isDisable: false });\n    } else {\n      this.setState({ isDisable: true });\n    }\n  }\n\n  async handleClick() {\n    const { getToken } = this.props;\n    await getToken();\n    store.getState().login.token\n  }\n\n  render() {\n    const { isDisable } = this.state;\n    return (\n      <form>\n        <label htmlFor=\"input-player-name\">\n          Nome\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"input-player-name\"\n            data-testid=\"input-player-name\"\n            onKeyUp={ this.handleChange }\n          />\n        </label>\n        <label htmlFor=\"input-gravatar-email\">\n          Email\n          <input\n            type=\"text\"\n            name=\"email\"\n            id=\"input-gravatar-email\"\n            data-testid=\"input-gravatar-email\"\n            onKeyUp={ this.handleChange }\n          />\n        </label>\n        <button\n          data-testid=\"btn-play\"\n          disabled={ isDisable }\n          type=\"button\"\n          onClick={ () => this.handleClick() }\n        >\n          Jogar\n        </button>\n      </form>\n    );\n  }\n}\n\nLogin.propTypes = {\n  getToken: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  getToken: () => dispatch(fetchAPI()),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}