{"ast":null,"code":"var _jsxFileName = \"/home/dh/projetos/sd-015-b-project-trivia-react-redux/src/pages/login.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchAPI } from '../redux/actions';\nimport store from '../redux/store';\nimport logo from '../trivia.png';\nimport '../App.css';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      /*       name: '',\n        email: '', */\n      isDisable: true\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleRedirect = this.handleRedirect.bind(this);\n  }\n\n  handleChange() {\n    const idName = document.getElementById('input-player-name').value;\n    const idEmail = document.getElementById('input-gravatar-email').value;\n    this.setState({\n      [idName]: idEmail\n    });\n\n    if (idName.length > 0 && idEmail.length > 0) {\n      this.setState({\n        isDisable: false\n      });\n    } else {\n      this.setState({\n        isDisable: true\n      });\n    }\n  }\n\n  async handleClick() {\n    const {\n      getToken,\n      history\n    } = this.props;\n    await getToken();\n    const {\n      token\n    } = store.getState().login;\n    localStorage.setItem('token', token);\n    history.push('/game');\n  }\n\n  handleRedirect() {\n    const {\n      history\n    } = this.props;\n    history.push('/settings');\n  }\n\n  render() {\n    const {\n      isDisable\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, \"Sua vez\"), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"input-player-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, \"Nome\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      id: \"input-player-name\",\n      \"data-testid\": \"input-player-name\",\n      onKeyUp: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"input-gravatar-email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, \"Email\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"email\",\n      id: \"input-gravatar-email\",\n      \"data-testid\": \"input-gravatar-email\",\n      onKeyUp: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      \"data-testid\": \"btn-play\",\n      disabled: isDisable,\n      type: \"button\",\n      onClick: () => this.handleClick(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, \"Jogar\")), /*#__PURE__*/React.createElement(\"button\", {\n      \"data-testid\": \"btn-settings\",\n      type: \"button\",\n      onClick: () => this.handleRedirect(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, \"Configura\\xE7\\xE3ogit\")));\n  }\n\n}\n\nLogin.propTypes = {\n  getToken: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func\n  }).isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n  getToken: () => dispatch(fetchAPI())\n});\n\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/dh/projetos/sd-015-b-project-trivia-react-redux/src/pages/login.js"],"names":["React","PropTypes","connect","fetchAPI","store","logo","Login","Component","constructor","state","isDisable","handleClick","bind","handleChange","handleRedirect","idName","document","getElementById","value","idEmail","setState","length","getToken","history","props","token","getState","login","localStorage","setItem","push","render","propTypes","func","isRequired","shape","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchAPI } from '../redux/actions';\nimport store from '../redux/store';\nimport logo from '../trivia.png';\nimport '../App.css';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n    /*       name: '',\n      email: '', */\n      isDisable: true,\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleRedirect = this.handleRedirect.bind(this);\n  }\n\n  handleChange() {\n    const idName = document.getElementById('input-player-name').value;\n    const idEmail = document.getElementById('input-gravatar-email').value;\n    this.setState({\n      [idName]: idEmail,\n    });\n    if (idName.length > 0 && idEmail.length > 0) {\n      this.setState({ isDisable: false });\n    } else {\n      this.setState({ isDisable: true });\n    }\n  }\n\n  async handleClick() {\n    const { getToken, history } = this.props;\n    await getToken();\n    const { token } = store.getState().login;\n    localStorage.setItem('token', token);\n    history.push('/game');\n  }\n\n  handleRedirect() {\n    const { history } = this.props;\n    history.push('/settings');\n  }\n\n  render() {\n    const { isDisable } = this.state;\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={ logo } className=\"App-logo\" alt=\"logo\" />\n          <p>Sua vez</p>\n          <form>\n            <label htmlFor=\"input-player-name\">\n              Nome\n              <input\n                type=\"text\"\n                name=\"name\"\n                id=\"input-player-name\"\n                data-testid=\"input-player-name\"\n                onKeyUp={ this.handleChange }\n              />\n            </label>\n            <label htmlFor=\"input-gravatar-email\">\n              Email\n              <input\n                type=\"text\"\n                name=\"email\"\n                id=\"input-gravatar-email\"\n                data-testid=\"input-gravatar-email\"\n                onKeyUp={ this.handleChange }\n              />\n            </label>\n            <button\n              data-testid=\"btn-play\"\n              disabled={ isDisable }\n              type=\"button\"\n              onClick={ () => this.handleClick() }\n            >\n              Jogar\n            </button>\n          </form>\n          <button\n            data-testid=\"btn-settings\"\n            type=\"button\"\n            onClick={ () => this.handleRedirect() }\n          >\n            Configuraçãogit\n          </button>\n        </header>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  getToken: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func }).isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  getToken: () => dispatch(fetchAPI()),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}