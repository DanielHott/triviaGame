{"ast":null,"code":"var _jsxFileName = \"/home/dh/projetos/sd-015-b-project-trivia-react-redux/src/pages/game.js\";\nimport React from 'react';\nimport Header from '../component/Header';\nimport store from '../redux/store';\n\nclass Game extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      category: '',\n      question: '',\n      correct_answer: '',\n      incorrect_answers: []\n    };\n    this.fetchApi = this.fetchApi.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchApi();\n  }\n\n  async fetchApi() {\n    const {\n      token\n    } = store.getState().login;\n    const response = await fetch(`https://opentdb.com/api.php?amount=5&token=${token}`);\n    const data = await response.json();\n    console.log(data);\n    const correct = data.results.correct_answer;\n    const {\n      category,\n      question,\n      correct_answer,\n      incorrect_answers\n    } = data.results[0];\n    console.log(incorrect_answers);\n    this.setState({\n      category,\n      question,\n      correct_answer,\n      incorrect_answers: [...incorrect_answers]\n    });\n  }\n\n  render() {\n    const {\n      incorrect_answers,\n      correct_answer,\n      question,\n      category\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      \"data-testid\": \"question-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, category), /*#__PURE__*/React.createElement(\"h4\", {\n      \"data-testid\": \"question-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, question.replace(/&quot;/gi, '\"').replace(/&#039;/gi, '')), incorrect_answers.map((alternative, index) => /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      key: alternative,\n      \"data-testid\": `wrong-answer-${index}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, alternative)), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      key: correct_answer,\n      \"data-testid\": \"correct-answer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, correct_answer)));\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/home/dh/projetos/sd-015-b-project-trivia-react-redux/src/pages/game.js"],"names":["React","Header","store","Game","Component","constructor","state","category","question","correct_answer","incorrect_answers","fetchApi","bind","componentDidMount","token","getState","login","response","fetch","data","json","console","log","correct","results","setState","render","replace","map","alternative","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;AAEA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAmC;AACjCC,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,cAAc,EAAE,EAHL;AAIXC,MAAAA,iBAAiB,EAAE;AAJR,KAAb;AAOA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKF,QAAL;AACD;;AAEa,QAARA,QAAQ,GAAG;AACf,UAAM;AAAEG,MAAAA;AAAF,QAAYZ,KAAK,CAACa,QAAN,GAAiBC,KAAnC;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,8CAA6CJ,KAAM,EAArD,CAA5B;AACA,UAAMK,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,UAAMI,OAAO,GAAGJ,IAAI,CAACK,OAAL,CAAaf,cAA7B;AACA,UAAM;AAAEF,MAAAA,QAAF;AAAYC,MAAAA,QAAZ;AAAsBC,MAAAA,cAAtB;AAAsCC,MAAAA;AAAtC,QAA4DS,IAAI,CAACK,OAAL,CAAa,CAAb,CAAlE;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYZ,iBAAZ;AACA,SAAKe,QAAL,CAAc;AACZlB,MAAAA,QADY;AAEZC,MAAAA,QAFY;AAGZC,MAAAA,cAHY;AAIZC,MAAAA,iBAAiB,EAAE,CAAC,GAAGA,iBAAJ;AAJP,KAAd;AAMD;;AAEDgB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEhB,MAAAA,iBAAF;AAAqBD,MAAAA,cAArB;AAAqCD,MAAAA,QAArC;AAA+CD,MAAAA;AAA/C,QAA4D,KAAKD,KAAvE;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,qBAAY,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsCC,QAAtC,CADF,eAEE;AAAI,qBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIC,QAAQ,CAACmB,OAAT,CAAiB,UAAjB,EAA6B,GAA7B,EAAkCA,OAAlC,CAA0C,UAA1C,EAAsD,EAAtD,CADJ,CAFF,EAMGjB,iBAAiB,CAACkB,GAAlB,CAAsB,CAACC,WAAD,EAAcC,KAAd,kBACrB;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,GAAG,EAAGD,WAFR;AAGE,qBAAe,gBAAeC,KAAM,EAHtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGD,WALH,CADD,CANH,eAcE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,GAAG,EAAGpB,cAFR;AAGE,qBAAY,gBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKIA,cALJ,CAdF,CAFF,CADF;AA2BD;;AA/DgC;;AAkEnC,eAAeN,IAAf","sourcesContent":["import React from 'react';\nimport Header from '../component/Header';\nimport store from '../redux/store';\n\nclass Game extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      category: '',\n      question: '',\n      correct_answer: '',\n      incorrect_answers: [],\n    };\n\n    this.fetchApi = this.fetchApi.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchApi();\n  }\n\n  async fetchApi() {\n    const { token } = store.getState().login;\n    const response = await fetch(`https://opentdb.com/api.php?amount=5&token=${token}`);\n    const data = await response.json();\n    console.log(data);\n    const correct = data.results.correct_answer;\n    const { category, question, correct_answer, incorrect_answers } = data.results[0];\n    console.log(incorrect_answers);\n    this.setState({\n      category,\n      question,\n      correct_answer,\n      incorrect_answers: [...incorrect_answers],\n    });\n  }\n\n  render() {\n    const { incorrect_answers, correct_answer, question, category } = this.state;\n    return (\n      <div>\n        <Header />\n        <section>\n          <h4 data-testid=\"question-category\">{ category }</h4>\n          <h4 data-testid=\"question-text\">\n            { question.replace(/&quot;/gi, '\"').replace(/&#039;/gi, '') }\n\n          </h4>\n          {incorrect_answers.map((alternative, index) => (\n            <button\n              type=\"button\"\n              key={ alternative }\n              data-testid={ `wrong-answer-${index}` }\n            >\n              {alternative}\n            </button>))}\n          <button\n            type=\"button\"\n            key={ correct_answer }\n            data-testid=\"correct-answer\"\n          >\n            { correct_answer }\n          </button>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}