{"ast":null,"code":"var _jsxFileName = \"/home/dh/projetos/sd-015-b-project-trivia-react-redux/src/pages/game.js\";\nimport React from 'react';\nimport Header from '../component/Header';\nimport store from '../redux/store';\n\nclass Game extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      category: '',\n      question: '',\n      correct: '',\n      incorrectAnswers: [],\n      time: 30\n    };\n    this.fetchApi = this.fetchApi.bind(this);\n    this.changeColor = this.changeColor.bind(this);\n    this.timer = this.timer.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchApi();\n    this.timer();\n  }\n\n  async fetchApi() {\n    const {\n      token\n    } = store.getState().login;\n    const response = await fetch(`https://opentdb.com/api.php?amount=5&token=${token}`);\n    const data = await response.json();\n    const correct = data.results[0].correct_answer;\n    const incorrect = data.results[0].incorrect_answers;\n    const {\n      category,\n      question\n    } = data.results[0];\n    this.setState({\n      category,\n      question,\n      correct,\n      incorrectAnswers: [...incorrect]\n    });\n  }\n\n  changeColor() {\n    const wrongs = document.querySelectorAll('.wrong');\n    const correct = document.querySelector('.correct');\n    wrongs.forEach(element => {\n      element.style.border = '3px solid rgb(255, 0, 0)';\n    });\n    correct.style.border = '3px solid rgb(6, 240, 15)';\n  }\n\n  timer() {\n    const mil = 1000;\n    const {\n      time\n    } = this.state;\n\n    function countdown() {\n      this.set({\n        time: time - 1\n      });\n    }\n\n    setInterval(countdown, mil);\n  }\n\n  render() {\n    const {\n      incorrectAnswers,\n      correct,\n      question,\n      category\n    } = this.state;\n    return incorrectAnswers.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      \"data-testid\": \"question-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, category), /*#__PURE__*/React.createElement(\"h4\", {\n      \"data-testid\": \"question-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, question.replace(/&quot;/gi, '\"').replace(/&#039;/gi, '')), incorrectAnswers.map((alternative, index) => /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      key: alternative,\n      \"data-testid\": `wrong-answer-${index}`,\n      onClick: this.changeColor,\n      className: \"wrong\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    }, alternative)), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      key: correct,\n      \"data-testid\": \"correct-answer\",\n      onClick: this.changeColor,\n      className: \"correct\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, correct))) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, \"Loading\");\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/home/dh/projetos/sd-015-b-project-trivia-react-redux/src/pages/game.js"],"names":["React","Header","store","Game","Component","constructor","state","category","question","correct","incorrectAnswers","time","fetchApi","bind","changeColor","timer","componentDidMount","token","getState","login","response","fetch","data","json","results","correct_answer","incorrect","incorrect_answers","setState","wrongs","document","querySelectorAll","querySelector","forEach","element","style","border","mil","countdown","set","setInterval","render","length","replace","map","alternative","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from '../component/Header';\nimport store from '../redux/store';\n\nclass Game extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      category: '',\n      question: '',\n      correct: '',\n      incorrectAnswers: [],\n      time: 30,\n    };\n\n    this.fetchApi = this.fetchApi.bind(this);\n    this.changeColor = this.changeColor.bind(this);\n    this.timer = this.timer.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchApi();\n    this.timer();\n  }\n\n  async fetchApi() {\n    const { token } = store.getState().login;\n    const response = await fetch(`https://opentdb.com/api.php?amount=5&token=${token}`);\n    const data = await response.json();\n    const correct = data.results[0].correct_answer;\n    const incorrect = data.results[0].incorrect_answers;\n    const { category, question } = data.results[0];\n    this.setState({\n      category,\n      question,\n      correct,\n      incorrectAnswers: [...incorrect],\n    });\n  }\n\n  changeColor() {\n    const wrongs = document.querySelectorAll('.wrong');\n    const correct = document.querySelector('.correct');\n    wrongs.forEach((element) => { element.style.border = '3px solid rgb(255, 0, 0)'; });\n    correct.style.border = '3px solid rgb(6, 240, 15)';\n  }\n\n  timer() {\n    const mil = 1000;\n    const { time } = this.state;\n    function countdown() {\n      this.set({ time: (time - 1) });\n    }\n    setInterval(countdown, mil);\n  }\n\n  render() {\n    const { incorrectAnswers, correct, question, category } = this.state;\n    return (\n      (incorrectAnswers.length > 0) ? (\n        <div>\n          <Header />\n          <section>\n            <h4 data-testid=\"question-category\">{ category }</h4>\n            <h4 data-testid=\"question-text\">\n              { question.replace(/&quot;/gi, '\"').replace(/&#039;/gi, '') }\n\n            </h4>\n            {incorrectAnswers.map((alternative, index) => (\n              <button\n                type=\"button\"\n                key={ alternative }\n                data-testid={ `wrong-answer-${index}` }\n                onClick={ this.changeColor }\n                className=\"wrong\"\n              >\n                {alternative}\n              </button>))}\n            <button\n              type=\"button\"\n              key={ correct }\n              data-testid=\"correct-answer\"\n              onClick={ this.changeColor }\n              className=\"correct\"\n            >\n              { correct }\n            </button>\n          </section>\n        </div>\n      ) : <p>Loading</p>\n    );\n  }\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}