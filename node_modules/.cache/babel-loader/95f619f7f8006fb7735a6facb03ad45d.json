{"ast":null,"code":"var _jsxFileName = \"/home/dh/projetos/sd-015-b-project-trivia-react-redux/src/pages/game.js\";\nimport React from 'react';\nimport Header from '../component/Header';\nimport store from '../redux/store';\n\nclass Game extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      category: '',\n      question: '',\n      correct: '',\n      incorrectAnswers: [],\n      time: 30,\n      isDisabled: false\n    };\n    this.fetchApi = this.fetchApi.bind(this);\n    this.changeColor = this.changeColor.bind(this);\n    this.timer = this.timer.bind(this);\n    this.disabled = this.disabled.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchApi();\n    this.timer();\n  }\n\n  async fetchApi() {\n    const {\n      token\n    } = store.getState().login;\n    const response = await fetch(`https://opentdb.com/api.php?amount=5&token=${token}`);\n    const data = await response.json();\n    console.log(data.results[0]);\n    const correct = data.results[0].correct_answer;\n    const incorrect = data.results[0].incorrect_answers;\n    const {\n      category,\n      question,\n      difficulty\n    } = data.results[0];\n    this.setState({\n      category,\n      question,\n      correct,\n      difficulty,\n      incorrectAnswers: [...incorrect]\n    });\n  }\n\n  changeColor() {\n    const wrongs = document.querySelectorAll('.wrong');\n    const correct = document.querySelector('.correct');\n    wrongs.forEach(element => {\n      element.style.border = '3px solid rgb(255, 0, 0)';\n    });\n    correct.style.border = '3px solid rgb(6, 240, 15)';\n  }\n\n  disabled() {\n    this.setState({\n      isDisabled: true\n    });\n    this.changeColor();\n  }\n\n  timer() {\n    const {\n      time\n    } = this.state;\n    const mil = 1000;\n\n    if (time !== 0) {\n      setInterval(() => {\n        this.setState(prevState => {\n          if (prevState.time > 0) {\n            return {\n              time: prevState.time - 1\n            };\n          }\n\n          this.disabled();\n        });\n      }, mil);\n    }\n  }\n\n  render() {\n    const {\n      incorrectAnswers,\n      correct,\n      question,\n      category,\n      time,\n      isDisabled\n    } = this.state;\n    return incorrectAnswers.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      \"data-testid\": \"question-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, category), /*#__PURE__*/React.createElement(\"h4\", {\n      \"data-testid\": \"question-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, question.replace(/&quot;/gi, '\"').replace(/&#039;/gi, '')), incorrectAnswers.map((alternative, index) => /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      key: alternative,\n      disabled: isDisabled,\n      \"data-testid\": `wrong-answer-${index}`,\n      onClick: this.changeColor,\n      className: \"wrong\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }, alternative)), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      key: correct,\n      disabled: isDisabled,\n      \"data-testid\": \"correct-answer\",\n      onClick: () => {\n        this.changeColor();\n        this.score();\n      },\n      className: \"correct\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, correct), time)) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }, \"Loading\");\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/home/dh/projetos/sd-015-b-project-trivia-react-redux/src/pages/game.js"],"names":["React","Header","store","Game","Component","constructor","state","category","question","correct","incorrectAnswers","time","isDisabled","fetchApi","bind","changeColor","timer","disabled","componentDidMount","token","getState","login","response","fetch","data","json","console","log","results","correct_answer","incorrect","incorrect_answers","difficulty","setState","wrongs","document","querySelectorAll","querySelector","forEach","element","style","border","mil","setInterval","prevState","render","length","replace","map","alternative","index","score"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from '../component/Header';\nimport store from '../redux/store';\n\nclass Game extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      category: '',\n      question: '',\n      correct: '',\n      incorrectAnswers: [],\n      time: 30,\n      isDisabled: false,\n    };\n\n    this.fetchApi = this.fetchApi.bind(this);\n    this.changeColor = this.changeColor.bind(this);\n    this.timer = this.timer.bind(this);\n    this.disabled = this.disabled.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchApi();\n    this.timer();\n  }\n\n  async fetchApi() {\n    const { token } = store.getState().login;\n    const response = await fetch(`https://opentdb.com/api.php?amount=5&token=${token}`);\n    const data = await response.json();\n    console.log(data.results[0]);\n    const correct = data.results[0].correct_answer;\n    const incorrect = data.results[0].incorrect_answers;\n    const { category, question, difficulty } = data.results[0];\n    this.setState({\n      category,\n      question,\n      correct,\n      difficulty,\n      incorrectAnswers: [...incorrect],\n    });\n  }\n\n  changeColor() {\n    const wrongs = document.querySelectorAll('.wrong');\n    const correct = document.querySelector('.correct');\n    wrongs.forEach((element) => { element.style.border = '3px solid rgb(255, 0, 0)'; });\n    correct.style.border = '3px solid rgb(6, 240, 15)';\n  }\n\n  disabled() {\n    this.setState({ isDisabled: true });\n    this.changeColor();\n  }\n\n  timer() {\n    const { time } = this.state;\n    const mil = 1000;\n    if (time !== 0) {\n      setInterval(() => {\n        this.setState((prevState) => {\n          if (prevState.time > 0) {\n            return ({ time: prevState.time - 1 });\n          } this.disabled();\n        });\n      }, mil);\n    }\n  }\n\n  render() {\n    const {\n      incorrectAnswers, correct,\n      question, category, time, isDisabled } = this.state;\n    return (\n      (incorrectAnswers.length > 0) ? (\n        <div>\n          <Header />\n          <section>\n            <h4 data-testid=\"question-category\">{ category }</h4>\n            <h4 data-testid=\"question-text\">\n              { question.replace(/&quot;/gi, '\"').replace(/&#039;/gi, '') }\n\n            </h4>\n            {incorrectAnswers.map((alternative, index) => (\n              <button\n                type=\"button\"\n                key={ alternative }\n                disabled={ isDisabled }\n                data-testid={ `wrong-answer-${index}` }\n                onClick={ this.changeColor }\n                className=\"wrong\"\n              >\n                {alternative}\n              </button>))}\n            <button\n              type=\"button\"\n              key={ correct }\n              disabled={ isDisabled }\n              data-testid=\"correct-answer\"\n              onClick={ () => {\n                this.changeColor();\n                this.score();\n              } }\n              className=\"correct\"\n            >\n              { correct }\n            </button>\n            { time }\n          </section>\n        </div>\n      ) : <p>Loading</p>\n    );\n  }\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}