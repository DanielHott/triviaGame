{"ast":null,"code":"var _jsxFileName = \"/home/dh/projetos/sd-015-b-project-trivia-react-redux/src/pages/game.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Header from '../component/Header';\nimport { setScore } from '../redux/actions';\nimport store from '../redux/store';\n\nclass Game extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      category: '',\n      question: '',\n      correct: '',\n      incorrectAnswers: [],\n      time: 30,\n      isDisabled: false,\n      questionNumber: 0,\n      isButtonVisible: false\n    };\n    this.fetchApi = this.fetchApi.bind(this);\n    this.changeColor = this.changeColor.bind(this);\n    this.timer = this.timer.bind(this);\n    this.disabled = this.disabled.bind(this);\n    this.score = this.score.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      saveScore\n    } = this.props;\n    saveScore({\n      score: 0\n    });\n    this.fetchApi();\n    this.timer();\n  }\n\n  async fetchApi() {\n    const {\n      questionNumber\n    } = this.state;\n    const {\n      token\n    } = store.getState().login;\n    const response = await fetch(`https://opentdb.com/api.php?amount=5&token=${token}`);\n    const data = await response.json();\n    console.log(data.results[questionNumber]);\n    const correct = data.results[questionNumber].correct_answer;\n    const incorrect = data.results[questionNumber].incorrect_answers;\n    const {\n      category,\n      question,\n      difficulty\n    } = data.results[questionNumber];\n    this.setState({\n      category,\n      question,\n      correct,\n      difficulty,\n      assertions: 0,\n      incorrectAnswers: [...incorrect]\n    });\n  }\n\n  changeColor() {\n    const wrongs = document.querySelectorAll('.wrong');\n    const correct = document.querySelector('.correct');\n    wrongs.forEach(element => {\n      element.style.border = '3px solid rgb(255, 0, 0)';\n    });\n    correct.style.border = '3px solid rgb(6, 240, 15)';\n    this.setState({\n      isButtonVisible: true\n    });\n  }\n\n  disabled() {\n    this.setState({\n      isDisabled: true\n    });\n    this.changeColor();\n  }\n\n  timer() {\n    const {\n      time\n    } = this.state;\n    const mil = 1000;\n\n    if (time !== 0) {\n      setInterval(() => {\n        this.setState(prevState => {\n          if (prevState.time > 0) {\n            return {\n              time: prevState.time - 1\n            };\n          }\n\n          this.disabled();\n        });\n      }, mil);\n    }\n  }\n\n  score() {\n    const {\n      saveScore\n    } = this.props;\n    const base = 10;\n    const {\n      difficulty,\n      time,\n      assertions\n    } = this.state;\n    const actAssertion = assertions;\n    this.setState({\n      assertions: actAssertion + 1\n    });\n    const levels = [0, 'easy', 'medium', 'hard'];\n    const {\n      player\n    } = store.getState().login;\n    const {\n      name,\n      gravatarEmail\n    } = player;\n    const point = levels.indexOf(difficulty);\n    const points = base + time * point;\n    const user = {\n      name,\n      assertions: actAssertion + 1,\n      score: points,\n      gravatarEmail\n    };\n    localStorage.setItem('player', JSON.stringify(user));\n    saveScore({\n      score: points,\n      assertions: 1\n    });\n  }\n\n  next() {\n    const {\n      questionNumber\n    } = this.state;\n    const actNumber = questionNumber + 1;\n    this.setState({\n      questionNumber: actNumber\n    });\n    this.fetchApi();\n  }\n\n  render() {\n    const {\n      incorrectAnswers,\n      correct,\n      question,\n      category,\n      time,\n      isDisabled,\n      isButtonVisible\n    } = this.state;\n    return incorrectAnswers.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      \"data-testid\": \"question-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, category), /*#__PURE__*/React.createElement(\"h4\", {\n      \"data-testid\": \"question-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, question.replace(/&quot;/gi, '\"').replace(/&#039;/gi, '')), incorrectAnswers.map((alternative, index) => /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      key: alternative,\n      disabled: isDisabled,\n      \"data-testid\": `wrong-answer-${index}`,\n      onClick: this.changeColor,\n      className: \"wrong\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }\n    }, alternative)), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      key: correct,\n      disabled: isDisabled,\n      \"data-testid\": \"correct-answer\",\n      onClick: () => {\n        this.changeColor();\n        this.score();\n      },\n      className: \"correct\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, correct), isButtonVisible && /*#__PURE__*/React.createElement(\"button\", {\n      \"data-testid\": \"btn-next\",\n      type: \"button\",\n      onClick: this.next,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 16\n      }\n    }, \"Next\"), time)) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }\n    }, \"Loading\");\n  }\n\n}\n\nGame.propTypes = {\n  saveScore: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n  saveScore: state => dispatch(setScore(state))\n});\n\nexport default connect(null, mapDispatchToProps)(Game);","map":{"version":3,"sources":["/home/dh/projetos/sd-015-b-project-trivia-react-redux/src/pages/game.js"],"names":["React","PropTypes","connect","Header","setScore","store","Game","Component","constructor","state","category","question","correct","incorrectAnswers","time","isDisabled","questionNumber","isButtonVisible","fetchApi","bind","changeColor","timer","disabled","score","componentDidMount","saveScore","props","token","getState","login","response","fetch","data","json","console","log","results","correct_answer","incorrect","incorrect_answers","difficulty","setState","assertions","wrongs","document","querySelectorAll","querySelector","forEach","element","style","border","mil","setInterval","prevState","base","actAssertion","levels","player","name","gravatarEmail","point","indexOf","points","user","localStorage","setItem","JSON","stringify","next","actNumber","render","length","replace","map","alternative","index","propTypes","func","isRequired","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Header from '../component/Header';\nimport { setScore } from '../redux/actions';\nimport store from '../redux/store';\n\nclass Game extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      category: '',\n      question: '',\n      correct: '',\n      incorrectAnswers: [],\n      time: 30,\n      isDisabled: false,\n      questionNumber: 0,\n      isButtonVisible: false,\n    };\n\n    this.fetchApi = this.fetchApi.bind(this);\n    this.changeColor = this.changeColor.bind(this);\n    this.timer = this.timer.bind(this);\n    this.disabled = this.disabled.bind(this);\n    this.score = this.score.bind(this);\n  }\n\n  componentDidMount() {\n    const { saveScore } = this.props;\n    saveScore({ score: 0 });\n    this.fetchApi();\n    this.timer();\n  }\n\n  async fetchApi() {\n    const { questionNumber } = this.state;\n    const { token } = store.getState().login;\n    const response = await fetch(`https://opentdb.com/api.php?amount=5&token=${token}`);\n    const data = await response.json();\n    console.log(data.results[questionNumber]);\n    const correct = data.results[questionNumber].correct_answer;\n    const incorrect = data.results[questionNumber].incorrect_answers;\n    const { category, question, difficulty } = data.results[questionNumber];\n    this.setState({\n      category,\n      question,\n      correct,\n      difficulty,\n      assertions: 0,\n      incorrectAnswers: [...incorrect],\n    });\n  }\n\n  changeColor() {\n    const wrongs = document.querySelectorAll('.wrong');\n    const correct = document.querySelector('.correct');\n    wrongs.forEach((element) => { element.style.border = '3px solid rgb(255, 0, 0)'; });\n    correct.style.border = '3px solid rgb(6, 240, 15)';\n    this.setState({ isButtonVisible: true });\n  }\n\n  disabled() {\n    this.setState({ isDisabled: true });\n    this.changeColor();\n  }\n\n  timer() {\n    const { time } = this.state;\n    const mil = 1000;\n    if (time !== 0) {\n      setInterval(() => {\n        this.setState((prevState) => {\n          if (prevState.time > 0) {\n            return ({ time: prevState.time - 1 });\n          } this.disabled();\n        });\n      }, mil);\n    }\n  }\n\n  score() {\n    const { saveScore } = this.props;\n    const base = 10;\n    const { difficulty, time, assertions } = this.state;\n    const actAssertion = assertions;\n    this.setState({ assertions: actAssertion + 1 });\n    const levels = [0, 'easy', 'medium', 'hard'];\n    const { player } = store.getState().login;\n    const { name, gravatarEmail } = player;\n    const point = levels.indexOf(difficulty);\n    const points = base + (time * point);\n    const user = {\n      name,\n      assertions: actAssertion + 1,\n      score: points,\n      gravatarEmail,\n    };\n    localStorage.setItem('player', JSON.stringify(user));\n    saveScore({ score: points, assertions: 1 });\n  }\n\n  next() {\n    const { questionNumber } = this.state;\n    const actNumber = questionNumber + 1;\n    this.setState({ questionNumber: actNumber });\n    this.fetchApi();\n  }\n\n  render() {\n    const { incorrectAnswers, correct,\n      question, category, time, isDisabled, isButtonVisible } = this.state;\n    return (\n      (incorrectAnswers.length > 0) ? (\n        <div>\n          <Header />\n          <section>\n            <h4 data-testid=\"question-category\">{ category }</h4>\n            <h4 data-testid=\"question-text\">\n              { question.replace(/&quot;/gi, '\"').replace(/&#039;/gi, '') }\n            </h4>\n            {incorrectAnswers.map((alternative, index) => (\n              <button\n                type=\"button\"\n                key={ alternative }\n                disabled={ isDisabled }\n                data-testid={ `wrong-answer-${index}` }\n                onClick={ this.changeColor }\n                className=\"wrong\"\n              >\n                {alternative}\n              </button>))}\n            <button\n              type=\"button\"\n              key={ correct }\n              disabled={ isDisabled }\n              data-testid=\"correct-answer\"\n              onClick={ () => {\n                this.changeColor();\n                this.score();\n              } }\n              className=\"correct\"\n            >\n              { correct }\n            </button>\n            { isButtonVisible\n            && <button\n              data-testid=\"btn-next\"\n              type=\"button\"\n              onClick={ this.next }\n            >\n              Next\n            </button>}\n            { time }\n          </section>\n        </div>\n      ) : <p>Loading</p>\n    );\n  }\n}\n\nGame.propTypes = {\n  saveScore: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  saveScore: (state) => dispatch(setScore(state)),\n});\n\nexport default connect(null, mapDispatchToProps)(Game);\n"]},"metadata":{},"sourceType":"module"}